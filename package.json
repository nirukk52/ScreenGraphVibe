{
  "name": "screengraph",
  "version": "0.1.0",
  "private": true,
  "description": "AI-driven crawling and verification system for mobile and web apps",
  "workspaces": [
    "data",
    "backend",
    "ui",
    "tests",
    "logging",
    "infra",
    "mcp"
  ],
  "scripts": {
    "dev": "concurrently \"cd backend && npm run dev\" \"cd ui && npm run dev\" \"npm run dev:agent\"",
    "dev:clean": "npm run ports:kill && npm run dev",
    "dev:restart": "npm run ports:kill && sleep 2 && npm run dev",
    "dev:backend": "cd backend && npm run dev",
    "dev:ui": "cd ui && npm run dev",
    "dev:agent": "cd screengraph-agent && source venv/bin/activate && uvicorn main:app --reload --host 0.0.0.0 --port 8000",
    "dev:mcp": "cd mcp && npm run dev",
    "start": "concurrently \"cd backend && npm start\" \"cd ui && npm start\" \"npm run start:agent\"",
    "start:agent": "cd screengraph-agent && source venv/bin/activate && uvicorn main:app --host 0.0.0.0 --port 8000",
    "start:mcp": "cd mcp && npm start",
    "ports:kill": "lsof -ti tcp:3000 | xargs -r kill -9 && lsof -ti tcp:3001 | xargs -r kill -9 && lsof -ti tcp:8000 | xargs -r kill -9",
    "test:kill": "npm run ports:kill && pkill -f 'tsx watch' && pkill -f 'next dev' && pkill -f 'playwright'",
    "ports:check": "lsof -i :3000 && lsof -i :3001 && lsof -i :8000",
    "build": "npm run build --workspaces",
    "test": "npm run test --workspaces --if-present",
    "test:all": "npm run test:data && npm run test:e2e && npm run test:agent",
    "test:all:report": "./scripts/ci/test-summary.sh",
    "test:report": "./scripts/ci/test-summary.sh",
    "test:everything": "npm run test:unit && npm run test:integration && npm run test:agent && npm run test:e2e",
    "test:unit": "npm run test:unit --workspaces --if-present",
    "test:integration": "npm run test:integration --workspaces --if-present",
    "test:e2e": "cd tests && npm run test:e2e",
    "test:data": "cd data && npm test",
    "test:data:unit": "cd data && npm run test:unit",
    "test:data:integration": "cd data && npm run test:integration",
    "test:backend": "cd backend && npm test",
    "test:backend:unit": "cd backend && npm run test:unit",
    "test:backend:integration": "cd backend && npm run test:integration",
    "test:ui": "cd ui && npm test",
    "test:ui:unit": "cd ui && npm run test:unit",
    "test:ui:integration": "cd ui && npm run test:integration",
    "test:agent": "cd screengraph-agent && source venv/bin/activate && pytest",
    "test:agent:unit": "cd screengraph-agent && source venv/bin/activate && pytest tests/ -m unit",
    "test:agent:integration": "cd screengraph-agent && source venv/bin/activate && pytest tests/ -m integration",
    "test:agent:watch": "cd screengraph-agent && source venv/bin/activate && pytest-watch",
    "agent:setup": "cd screengraph-agent && python3.13 -m venv venv && source venv/bin/activate && pip install --upgrade pip && pip install pytest pytest-asyncio pytest-mock fastapi uvicorn pydantic httpx python-multipart python-dotenv Appium-Python-Client selenium",
    "agent:shell": "cd screengraph-agent && source venv/bin/activate && exec $SHELL",
    "agent:pip": "cd screengraph-agent && source venv/bin/activate && pip",
    "agent:python": "cd screengraph-agent && source venv/bin/activate && python",
    "deploy": "./scripts/ops/deploy.sh",
    "deploy:infra": "cd infra && npm run deploy",
    "health": "./scripts/ops/health-check.sh",
    "db:generate": "cd data && npm run db:generate",
    "db:migrate": "cd data && npm run db:migrate",
    "db:studio": "cd data && npm run db:studio",
    "format": "prettier --cache --write .",
    "format:check": "prettier --check .",
    "lint": "eslint . --ext .js,.jsx,.ts,.tsx",
    "lint:fix": "eslint . --ext .js,.jsx,.ts,.tsx --fix",
    "prepare": "husky"
  },
  "devDependencies": {
    "concurrently": "^8.2.2",
    "husky": "^9.0.0",
    "prettier": "^3.6.2"
  }
}
