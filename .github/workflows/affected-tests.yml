name: Affected Tests

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches:
      - '**'
      - '!main'

jobs:
  changes:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      ui: ${{ steps.filter.outputs.ui }}
      tests: ${{ steps.filter.outputs.tests }}
      root: ${{ steps.filter.outputs.root }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            backend:
              - 'backend/**'
            ui:
              - 'ui/**'
              - 'management/persona-management/**'
            tests:
              - 'tests/**'
            root:
              - 'package.json'
              - 'package-lock.json'
              - 'tsconfig.json'
              - 'scripts/**'
              - '.github/**'

  test-backend:
    name: Backend tests
    runs-on: ubuntu-latest
    needs: [changes]
    if: needs.changes.outputs.backend == 'true' || needs.changes.outputs.root == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci
      - run: npm run test:backend

  test-ui:
    name: UI tests
    runs-on: ubuntu-latest
    needs: [changes]
    if: needs.changes.outputs.ui == 'true' || needs.changes.outputs.root == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci
      - run: npm run test:ui

  test-e2e:
    name: E2E tests
    runs-on: ubuntu-latest
    needs: [changes]
    if: needs.changes.outputs.backend == 'true' || needs.changes.outputs.ui == 'true' || needs.changes.outputs.tests == 'true' || needs.changes.outputs.root == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci
      - run: npx playwright install --with-deps
      - run: npm run test:e2e
      - name: Upload Playwright report (if exists)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: tests/playwright-report
          if-no-files-found: ignore


